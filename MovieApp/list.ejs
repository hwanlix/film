<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8" />
  <title><%= list.name %> - Details</title>
  <link rel="stylesheet" href="/main.css" />
</head>
<body>
  <main class="layout">
    <aside class="sidebar">
      <h2>Your Lists</h2>
      <ul class="list_menu">
        <% savedLists.forEach(list => { %>
          <li><a href="/api/lists/<%= list.name %>"><%= list.name %></a></li>
        <% }); %>
      </ul>
      <button class="create_list_btn_sb">+ Create New List</button>

      <!-- Inline create list form for sidebar -->
      <form id="createListFormSidebar" class="inline-create-form" action="/api/lists/add" method="POST">
        <input type="text" name="name" placeholder="List name" required />
        <button type="submit" class="button">Create</button>
        <button type="button" class="button cancel-btn">Cancel</button>
        <p class="form-error"></p>
      </form>
    </aside>

    <section class="content_area">
      <h1 class="heading"><%= list.name %></h1>

      <form class="delete_list" action="/api/lists/<%= list.name %>?_method=DELETE" method="POST" onsubmit="return confirm('Are you sure you want to delete this list?');">
        <button class="button" type="submit">Delete the list</button>
      </form>

      <ul class="movie__list">
        <% savedMovies.forEach(movie => { %>
          <li>
            <div class="movie" data-id="<%= movie.id %>">
              <div class="movie__cover-inner">
                <img src="<%= movie.posterUrl || '' %>" alt="<%= movie.title %>" class="movie__cover" />
              </div>
              <div class="movie__info">
                <div class="movie__title"><%= movie.title %></div>
                <% if (movie.genres && movie.genres.length > 0) { %>
                  <div class="movie__category">Genres: <%= movie.genres.join(', ') %></div>
                <% } %>
                <% if (movie.rating) { %>
                  <div class="movie__average"><%= movie.rating %></div>
                <% } %>
              </div>

              <div class="movie__actions">
                <% savedLists.forEach(list => { %>
                  <form action="/api/lists/<%= list.name %>/add-movie" method="POST" style="display:inline-block;">
                    <input type="hidden" name="id" value="<%= movie.id %>">
                    <input type="hidden" name="title" value="<%= movie.title %>">
                    <button class="dropdown_item" type="submit"><%= list.name %></button>
                  </form>
                <% }) %>
                <button class="create_list_btn_dp_dwn">+ Create New List</button>

                <!-- Inline create list form for dropdown -->
                <form id="createListFormDropdown" class="inline-create-form" action="/api/lists/add" method="POST">
                  <input type="text" name="name" placeholder="List name" required />
                  <button type="submit" class="button">Create</button>
                  <button type="button" class="button cancel-btn">Cancel</button>
                  <p class="form-error"></p>
                </form>

                <form action="/api/lists/<%= list.name %>/delete-movie/<%= movie.id %>?_method=DELETE" method="POST"
                      onsubmit="return confirm('Are you sure you want to delete this movie?');" style="display:inline-block;">
                  <button class="button" type="submit">Delete</button>
                </form>
              </div>
            </div>
          </li>
        <% }); %>
      </ul>
    </section>
  </main>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // Sidebar create new list button + inline form
      const createBtnSidebar = document.querySelector('.create_list_btn_sb');
      const formSidebar = document.getElementById('createListFormSidebar');
      const cancelBtnSidebar = formSidebar.querySelector('.cancel-btn');
      const errorSidebar = formSidebar.querySelector('.form-error');

      createBtnSidebar.addEventListener('click', () => {
        formSidebar.style.display = formSidebar.style.display === 'block' ? 'none' : 'block';
        errorSidebar.style.display = 'none';
        formSidebar.name.value = '';
      });

      cancelBtnSidebar.addEventListener('click', () => {
        formSidebar.style.display = 'none';
        errorSidebar.style.display = 'none';
      });

      formSidebar.addEventListener('submit', async (e) => {
        e.preventDefault();
        errorSidebar.style.display = 'none';

        const name = formSidebar.name.value.trim();
        if (!name) {
          errorSidebar.textContent = 'List name is required';
          errorSidebar.style.display = 'block';
          return;
        }

        try {
          const res = await fetch('/api/lists/add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            credentials: 'include',
            body: JSON.stringify({ name })
          });
          const data = await res.json();

          if (res.ok) {
            // Reload page to show new list in sidebar and current list if applicable
            window.location.reload();
          } else {
            errorSidebar.textContent = data.error || 'Failed to create list';
            errorSidebar.style.display = 'block';
          }
        } catch {
          errorSidebar.textContent = 'Server error';
          errorSidebar.style.display = 'block';
        }
      });

      // Dropdown create new list button + inline form
      const createBtnDropdown = document.querySelector('.create_list_btn_dp_dwn');
      const formDropdown = document.getElementById('createListFormDropdown');
      const cancelBtnDropdown = formDropdown.querySelector('.cancel-btn');
      const errorDropdown = formDropdown.querySelector('.form-error');

      createBtnDropdown.addEventListener('click', () => {
        formDropdown.style.display = formDropdown.style.display === 'block' ? 'none' : 'block';
        errorDropdown.style.display = 'none';
        formDropdown.name.value = '';
      });

      cancelBtnDropdown.addEventListener('click', () => {
        formDropdown.style.display = 'none';
        errorDropdown.style.display = 'none';
      });

      formDropdown.addEventListener('submit', async (e) => {
        e.preventDefault();
        errorDropdown.style.display = 'none';

        const name = formDropdown.name.value.trim();
        if (!name) {
          errorDropdown.textContent = 'List name is required';
          errorDropdown.style.display = 'block';
          return;
        }

        try {
          const res = await fetch('/api/lists/add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            credentials: 'include',
            body: JSON.stringify({ name })
          });
          const data = await res.json();

          if (res.ok) {
            window.location.reload();
          } else {
            errorDropdown.textContent = data.error || 'Failed to create list';
            errorDropdown.style.display = 'block';
          }
        } catch {
          errorDropdown.textContent = 'Server error';
          errorDropdown.style.display = 'block';
        }
      });
    });
  </script>
</body>
</html>
